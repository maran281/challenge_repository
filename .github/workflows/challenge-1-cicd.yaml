name: "Deploy my challenge 1"

on:
    push:
        branches:
            - dev
            - test
            - main
        paths: 
            - 'challenge-1-cicd/**'

jobs:
    deployment-in-dev-env:
        runs-on: ubuntu-latest
        permissions: 
            contents: 'read'
            id-token: 'write'

        steps:
            - name: branch check for dev
              if: github.event.ref != 'refs/heads/dev'
              run: exit 0

            - name: checkout my code
              uses: actions/checkout@v3

            - id: 'auth'
              name: 'Authenticate to GCP DEV project'
              uses: 'google-github-actions/auth@v1'
              with:
                  token_format: 'access_token'
                  workload_identity_provider: 'projects/432600233474/locations/global/workloadIdentityPools/mypoolid-devproject-1/providers/myproviderid-devproject-1'
                  service_account: sa-dev-4-challenge-1-cicd@dev-project-406720.iam.gserviceaccount.com

            - name: 'Initializing terraform'
              run: |
                cd $GITHUB_WORKSPACE/challenge-1-cicd/terraform
                terraform init
                terraform apply -auto-approve
              env:
                TF_VAR_sa_dev: "sa-dev-4-challenge-1-cicd@dev-project-406720.iam.gserviceaccount.com"
                status_val: "fail"

#Below job is created to test the deployed cloud function
    verify-deployment-in-dev-env:
        runs-on: ubuntu-latest

        #below step produces an output of this job.
        #output result will be stored inside myoutput.
        #value of myoutput will be fetched from 
        #steps.<stepid where outout is generated>.outputs.<variable which is generating output>
        outputs:
          myoutput: ${{steps.verify-deployment-in-dev-env.outputs.status_val}}

        needs: deployment-in-dev-env
        if: success()

        permissions: 
          contents: 'read'
          id-token: 'write'

        steps:
          - name: checkout my code
            uses: actions/checkout@v3

          - id: 'auth'
            name: 'Authenticate to GCP DEV project'
            uses: 'google-github-actions/auth@v1'
            with:
              token_format: 'access_token'
              workload_identity_provider: 'projects/432600233474/locations/global/workloadIdentityPools/mypoolid-devproject-1/providers/myproviderid-devproject-1'
              service_account: sa-dev-4-challenge-1-cicd@dev-project-406720.iam.gserviceaccount.com

          - name: 'setup my cloud SDK'
            uses: 'google-github-actions/setup-gcloud@v1'

          - name: 'test the deployed cloud function'
            run: |
              gsutil cp $GITHUB_WORKSPACE/challenge-1-cicd/testing/testFile.txt gs://cf_source_bucket_4_challenge-1-cicd/test_file1_trigger.txt

          - name: 'validate the testing'
            id: 'verify-deployment-in-dev-env'
            run: |
              if gsutil stat gs://cf_target_bucket_4_challenge-1-cicd/processed_file.txt 
              then
                echo "status_val=pass" >> $GITHUB_OUTPUT
                echo "File exist"
              else
                echo "status_val=fail" >> $GITHUB_OUTPUT
                echo "Testing failed as the file doesn't exist in the target folder. Exiting the workflow"
                exit 0
              fi

#Below job is created to merge the code in another branch if previous job is successfull
    code-merge-in-prod-env:
      runs-on: ubuntu-latest
      needs: verify-deployment-in-dev-env

      steps:
        - name: setup GIT
          run: |
            echo "value of status_val is: ${{ needs.verify-deployment-in-dev-env.outputs.myoutput }}"
            git init
            git config --global user.name "maran281"
            git config --global user.email "berserker.syco@gmail.com"
            git clone -b dev https://maran281:${{ secrets.challenge_repo_github_token }}@github.com/maran281/challenge_repository.git
            cd challenge_repository
            git checkout test
            git merge dev
            git push origin test

            