name: "Deploy my challenge 1"

on:
    push:
        branches:
            - dev
            - test
            - main
        paths: 
            - 'challenge-1-cicd/**'

jobs:
    deployment-in-dev-env:
        runs-on: ubuntu-latest
        permissions: 
            contents: 'read'
            id-token: 'write'

        outputs:
          my_env_check_output: ${{steps.validate_for_dev.outputs.env_val}}

        steps:
            - name: checkout my code
              if: github.event.ref == 'refs/heads/dev' 
              uses: actions/checkout@v3

            - id: 'auth'
              if: github.event.ref == 'refs/heads/dev'
              name: 'Authenticate to GCP DEV project'
              uses: 'google-github-actions/auth@v1'
              with:
                  token_format: 'access_token'
                  workload_identity_provider: ${{secrets.workload_identity_provider_dev_project}}
                    #'projects/432600233474/locations/global/workloadIdentityPools/mypoolid-devproject-1/providers/myproviderid-devproject-1'
                  service_account: ${{secrets.service_account_dev_project}}
                    #sa-dev-4-challenge-1-cicd@dev-project-406720.iam.gserviceaccount.com

            - name: 'Initializing terraform'
              if: github.event.ref == 'refs/heads/dev'
              run: |
                cd $GITHUB_WORKSPACE/challenge-1-cicd/terraform
                terraform init
                terraform apply -auto-approve
              env:
                TF_VAR_sa: ${{secrets.SERVICE_ACCOUNT_DEV}} #"sa-dev-4-challenge-1-cicd@dev-project-406720.iam.gserviceaccount.com"
                status_val: "fail"
                TF_VAR_projectid: ${{secrets.PROJECTID_DEV}} #"dev-project-406720"
                TF_VAR_terraform_bucket: ${{secrets.terraform_bucket_dev}} #"tf_statebucket_4_challenge-1-cicd"
                TF_VAR_source_code_bucket: ${{secrets.SOURCE_CODE_BUCKET_DEV}} #"cf_source_code_4_challenge"
                TF_VAR_source_bucket: ${{secrets.SOURCE_BUCKET_DEV}} #"cf_source_bucket_4_challenge-1-cicd"
                TF_VAR_target_bucket: ${{secrets.TARGET_BUCKET_DEV}} #"cf_target_bucket_4_challenge-1-cicd"

    verify-deployment-in-dev-env:
        runs-on: ubuntu-latest

        #below step produces an output of this job.
        #output result will be stored inside myoutput.
        #value of myoutput will be fetched from 
        #steps.<stepid where outout is generated>.outputs.<variable which is generating output>
        outputs:
          myoutput: ${{steps.verify-deployment-in-dev-env.outputs.status_val}}

        needs: deployment-in-dev-env
        if: success()

        permissions: 
          contents: 'read'
          id-token: 'write'

        steps:
          - name: check_env
            if: github.event.ref == 'refs/heads/dev'
            run: |
              if [["${{ needs.deployment-in-dev-env.outputs.my_env_check_output}}" == 'not_dev']]
              then
                exit 1
              fi

          - name: checkout my code
            if: github.event.ref == 'refs/heads/dev'
            uses: actions/checkout@v3

          - id: 'auth'
            if: github.event.ref == 'refs/heads/dev'
            name: 'Authenticate to GCP DEV project'
            uses: 'google-github-actions/auth@v1'
            with:
              token_format: 'access_token'
              workload_identity_provider: ${{secrets.workload_identity_provider_test_project}}
                #'projects/432600233474/locations/global/workloadIdentityPools/mypoolid-devproject-1/providers/myproviderid-devproject-1'
              service_account: ${{secrets.service_account_test_project}}
                #sa-dev-4-challenge-1-cicd@dev-project-406720.iam.gserviceaccount.com

          - name: 'setup my cloud SDK'
            if: github.event.ref == 'refs/heads/dev'
            uses: 'google-github-actions/setup-gcloud@v1'

          - name: 'test the deployed cloud function'
            if: github.event.ref == 'refs/heads/dev'
            run: |
              gsutil cp $GITHUB_WORKSPACE/challenge-1-cicd/testing/testFile.txt gs://cf_source_bucket_4_challenge-1-cicd/test_file1_trigger.txt

          - name: 'validate the testing'
            if: github.event.ref == 'refs/heads/dev'
            id: 'verify-deployment-in-dev-env'
            run: |
              if gsutil stat gs://cf_target_bucket_4_challenge-1-cicd/processed_file.txt 
              then
                echo "status_val=pass" >> $GITHUB_OUTPUT
                echo "File exist"
              else
                echo "status_val=fail" >> $GITHUB_OUTPUT
                echo "Testing failed as the file doesn't exist in the target folder. Exiting the workflow"
                exit 0
              fi

#Below job is created to merge the code in another branch if previous job is successfull
    code-merge-in-prod-env:
      runs-on: ubuntu-latest
      needs: verify-deployment-in-dev-env

      steps:
        - name: setup GIT
          if: github.event.ref == 'refs/heads/dev'
          run: |
            echo "value of status_val is: ${{ needs.verify-deployment-in-dev-env.outputs.myoutput }}"
            git init
            git config --global user.name "maran281"
            git config --global user.email "berserker.syco@gmail.com"
            git clone -b dev https://maran2814:${{ secrets.challenge_repo_github_token }}@github.com/maran281/challenge_repository.git
            cd challenge_repository
            git checkout test
            git merge dev
            git push origin test