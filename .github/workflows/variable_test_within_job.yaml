name: "testing variable creation and sharing within a job"

on:
    push:
        branches: 
            - dev
        paths: 
            - 'testFolder/**'

jobs:
    testing_started:
        runs-on: ubuntu-latest

########### Setting env variable inside the job which will ###########
        env:
            jobEnvVar_one: 'v1_inside_job'
            jobEnvVar_two: 'v2_inside_job'
        
        steps:
            - name: checkout my code
              uses: actions/checkout@v3

########### Below step sets the variable and check the variable within the step ###########
            - name: set and check the a STEPS's env variable
              env:
                myVar1: "hi_Manoj"
              run: |
                echo "value of step's env variable is: $myVar1"

########### Below step check the variable which was set in the job(not in the step) ###########      
            - name: set and check the JOBS's env variable
              run: |
                echo "value of job's env variable 'jobEnvVar_one' is: $jobEnvVar_one"
                echo "value of job's env variable 'jobEnvVar_two' is: $jobEnvVar_two"

########### Below step sets the variable in step1 and check the variable in the step2 ###########
            - name: set and check variables between the steps within a job
              id: step_1
              run: |
                echo "var_between_steps_1=var_one" >> $GITHUB_ENV
                echo "var_between_steps_2=var_two" >> $GITHUB_ENV

            - name: set and check variables between the steps within a job
              id: step_2
              run: |
                echo " value of var_between_steps_1 is: ${{env.var_between_steps_1}}"
                echo " value of var_between_steps_2 is: ${{env.var_between_steps_2}}"

########### Below step changes variable which was set inside job and check the variable value in step2 ###########
            - name: set and check variables between the steps within a job
              id: step_01
              run: |
                echo "env.jobEnvVar_one=v1_inside_step" >> $GITHUB_ENV
                echo "env.jobEnvVar_two=v2_inside_step" >> $GITHUB_ENV

            - name: set and check variables between the steps within a job
              id: step_02
              run: |
                echo " value of var_between_steps_1 is: ${{env.jobEnvVar_one}}"
                echo " value of var_between_steps_2 is: ${{env.jobEnvVar_two}}"

########### Below steps sets the variable with 'if' condition in step1 and check the variable in the step2 ###########
            - name: Only setting a variables inside a step using if condition
              id: step_001
              run: |
                if [ ${{github.event.ref}} == 'refs/heads/dev' ]; then
                  echo "var_between_steps_01=var_one" >> $GITHUB_ENV
                  echo "var_between_steps_02=var_two" >> $GITHUB_ENV
                else
                  echo "var_between_steps_01=var_three" >> $GITHUB_ENV
                  echo "var_between_steps_02=var_four" >> $GITHUB_ENV
                fi

            - name: Checking a variable which was set in previous step
              id: step_002
              run: |
                echo " value of var_between_steps_01 is: ${{env.var_between_steps_01}}"
                echo " value of var_between_steps_02 is: ${{env.var_between_steps_02}}"
